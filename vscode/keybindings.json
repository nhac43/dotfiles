// Place your key bindings in this file to override the defaults
[
    // ------------------------------------------------
    //                Editor Settings 
    // ------------------------------------------------
    {
        "key": "ctrl+h",
        "command": "workbench.action.previousEditor",
        "when": "!terminalFocus && !sideBarFocus && vim.mode != 'Insert'"
    },
    {
        "key": "ctrl+l",
        "command": "workbench.action.nextEditor",
        "when": "!terminalFocus && !sideBarFocus && vim.mode != 'Insert'"
    },
    {
        "key": "ctrl+k",
        "command": "workbench.action.closeActiveEditor",
        "when": "!terminalFocus && !sideBarFocus && vim.mode != 'Insert'"
    },
    {
        "key": "ctrl+j",
        "command": "workbench.action.quickOpen",
        "when": "!terminalFocus && !sideBarFocus && vim.mode != 'Insert'"
    },
    {
        "key": "ctrl+[",
        "command": "workbench.action.closeQuickOpen",
        "when": "inQuickOpen ",
    },
    {
        "key": "ctrl+[",
        "command": "list.toggleKeyboardNavigation",
        "when": "listFocus && listSupportsKeyboardNavigation && !sideBarFocus"
    },
    {
        "key": "ctrl+[",
        "command": "extension.vim_escape",
        "when": "editorTextFocus && vim.active && !inDebugRepl"
    },
    {
        "key": "ctrl+=",
        "command": "editor.action.fontZoomIn"
    },
    {
        "key": "ctrl+-",
        "command": "editor.action.fontZoomOut"
    },
    {
        "key": "ctrl+p",
        "command": "-workbench.action.quickOpen"
    },
    {
        "key": "ctrl+e",
        "command": "-workbench.action.quickOpen"
    },
    {
        "key": "cmd+p",
        "command": "-workbench.action.quickOpen"
    },
    // ------------------------------------------------
    //                Terminal Settings 
    // ------------------------------------------------
    {
        "key": "ctrl+s o",
        "command": "workbench.action.terminal.toggleTerminal",
        "when": "!sideBarFocus && !terminalFocus"
    },
    {
        "key": "ctrl+s o",
        "command": "workbench.action.focusActiveEditorGroup",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+=",
        "command": "workbench.action.terminal.resizePaneUp",
        "when": "terminalFocus && terminalProcessSupported"
    },
    {
        "key": "ctrl+-",
        "command": "workbench.action.terminal.resizePaneDown",
        "when": "terminalFocus && terminalProcessSupported"
    },
    {
        "key": "ctrl+s c",
        "command": "workbench.action.terminal.new",
        "when": "terminalProcessSupported"
    },
    {
        "key": "ctrl+s x",
        "command": "workbench.action.terminal.kill",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+s n",
        "command": "workbench.action.terminal.focusNext",
        "when": "terminalFocus && terminalProcessSupported && !terminalEditorFocus"
    },
    {
        "key": "ctrl+s p",
        "command": "workbench.action.terminal.focusPrevious",
        "when": "terminalFocus && terminalProcessSupported && !terminalEditorFocus"
    },
    // ------------------------------------------------
    //                Sidebar Settings 
    // ------------------------------------------------
    {
        "key": "ctrl+t",
        "command": "workbench.view.explorer",
        "when": "vim.mode != 'SearchInProgressMode' && vim.mode != 'Insert'"
    },
    {
        "key": "ctrl+t",
        "command": "workbench.action.focusFirstEditorGroup",
        "when": "sideBarFocus && !editorFocus"
    },
    {
        "key": "ctrl+[",
        "command": "workbench.action.focusSideBar",
        "when": "sideBarFocus && !editorFocus && inputFocus"
    },
    // ------------------------------------------------
    //                Explorer Settings 
    // ------------------------------------------------
    {
        "key": "i",
        "command": "renameFile",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "enter",
        "command": "-renameFile",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "o",
        "command": "explorer.newFile",
        "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
    },
    {
        "key": "shift+o",
        "command": "explorer.newFolder",
        "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
    },
    {
        "key": "y y",
        "command": "filesExplorer.copy",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !inputFocus"
    },
    {
        "key": "p",
        "command": "filesExplorer.paste",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "d d",
        "command": "filesExplorer.cut",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "ctrl+[",
        "command": "filesExplorer.cancelCut",
        "when": "explorerResourceCut && explorerViewletVisible && filesExplorerFocus && !inputFocus"
    },
    {
        "key": "x",
        "command": "moveFileToTrash",
        "when": "explorerResourceMoveableToTrash && explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "u",
        "command": "undo",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !inputFocus"
    },
    {
        "key": "ctrl+r",
        "command": "redo",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !inputFocus"
    },
    {
        "key": "ctrl+[",
        "command": "list.clear",
        "when": "sideBarFocus && listFocus && listHasSelectionOrFocus && !inputFocus"
    },
]
