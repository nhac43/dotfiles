// Place your key bindings in this file to override the defaults
[
    // ------------------------------------------------
    //                Editor Settings 
    // ------------------------------------------------
    {
        "key": "ctrl+h",
        "command": "workbench.action.previousEditor",
        "when": "!terminalFocus && !filesExplorerFocus && vim.mode != 'Insert'"
    },
    {
        "key": "ctrl+l",
        "command": "workbench.action.nextEditor",
        "when": "!terminalFocus && !filesExplorerFocus && vim.mode != 'Insert'"
    },
    {
        "key": "ctrl+k",
        "command": "workbench.action.closeActiveEditor",
        "when": "!terminalFocus && !filesExplorerFocus && vim.mode != 'Insert'"
    },
    {
        "key": "ctrl+j",
        "command": "workbench.action.quickOpen",
    },
    {
        "key": "ctrl+[",
        "command": "workbench.action.closeQuickOpen",
        "when": "inQuickOpen ",
    },
    {
        "key": "ctrl+[",
        "command": "list.toggleKeyboardNavigation",
        "when": "listFocus && listSupportsKeyboardNavigation"
    },
    {
        "key": "ctrl+[",
        "command": "extension.vim_escape",
        "when": "editorTextFocus && vim.active && !inDebugRepl"
    },
    // ------------------------------------------------
    //                Terminal Settings 
    // ------------------------------------------------
    {
        "key": "ctrl+t",
        "command": "workbench.action.terminal.toggleTerminal",
        // "when": "editorTextFocus"
        // "when": "editorFocus || inWelcome"
        "when": "!listFocus && !terminalFocus"
    },
    {
        "key": "ctrl+t",
        "command": "workbench.action.focusActiveEditorGroup",
        "when": "terminalFocus"
    },
    // ------------------------------------------------
    //                Sidebar Settings 
    // ------------------------------------------------
    {
        "key": "ctrl+-",
        "command": "workbench.action.focusSideBar",
        "when": "vim.mode != 'SearchInProgressMode' && vim.mode != 'Insert'"
    //     "when": "!explorerviewletvisible && vim.mode != 'SearchInProgressMode' && vim.mode != 'Insert'"
    },
    // {
    //     "key": "ctrl+n",
    //     "command": "workbench.action.toggleSidebarVisibility",
    //     "when": "explorerViewletVisible && !searchViewletVisible && !inDebugMode && vim.mode != 'SearchInProgressMode' && vim.mode != 'Insert'"
    // },
    {
        "key": "ctrl+-",
        "command": "workbench.action.focusFirstEditorGroup",
        "when": "listFocus && !editorFocus"
    },
    {
        "key": "i",
        "command": "renameFile",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "enter",
        "command": "-renameFile",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "o",
        "command": "explorer.newFile",
        "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
    },
    {
        "key": "shift+o",
        "command": "explorer.newFolder",
        "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
    },
    {
        "key": "y y",
        "command": "filesExplorer.copy",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !inputFocus"
    },
    {
        "key": "p",
        "command": "filesExplorer.paste",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "d d",
        "command": "filesExplorer.cut",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "ctrl+[",
        "command": "filesExplorer.cancelCut",
        "when": "explorerResourceCut && explorerViewletVisible && filesExplorerFocus && !inputFocus"
    },
    {
        "key": "x",
        "command": "moveFileToTrash",
        "when": "explorerResourceMoveableToTrash && explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "u",
        "command": "undo",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !inputFocus"
    },
    {
        "key": "ctrl+r",
        "command": "redo",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !inputFocus"
    },
]
